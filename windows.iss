; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "Url Admin"
#define MyAppVersion "0.1.0"
#define MyAppPublisher "491529736@qq.com"
#define MyAppURL "491529736@qq.com"
#define MyAppExeName "start.bat"

[Setup]
; NOTE: The value of AppId uniquely identifies this application. Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{8EE628C2-2138-47FB-A9A6-2226557BB408}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName={autopf}\{#MyAppName}
DisableProgramGroupPage=yes
; Uncomment the following line to run in non administrative install mode (install for current user only.)
;PrivilegesRequired=lowest
OutputBaseFilename=urlAdminSetup
Compression=lzma
SolidCompression=yes
WizardStyle=modern
UsePreviousAppDir=no

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"

[Tasks]
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked

[Files]       
Source: "start.bat"; DestDir: "{app}"; Flags:ignoreversion   
Source: "restart.bat"; DestDir: "{app}"; Flags:ignoreversion     
Source: "stop.bat"; DestDir: "{app}"; Flags:ignoreversion      
Source: "reconfig.bat"; DestDir: "{app}"; Flags:ignoreversion  
Source: "urladmin.ps1"; DestDir: "{app}"; Flags:ignoreversion
Source: "web\*"; DestDir: "{app}\web\"; Flags:igNoreversion recursesubdirs createallsubdirs         
Source: "app\*"; DestDir: "{app}\app\"; Flags:igNoreversion recursesubdirs createallsubdirs         
Source: "nginx-1.13.5\*"; DestDir: "{app}\nginx-1.13.5\"; Flags:igNoreversion recursesubdirs createallsubdirs
; NOTE: Don't use "Flags: ignoreversion" on any shared system files
[code]      
var          
myPage:TwizardPage;   
// 记录端口、ip变量
backPort:String;
forePort:String;
ipAddress:String;   
// 定义 input 
backPortEdit: TEdit;
forePortEdit: TEdit; 
ipAddressEdit:TEdit;

procedure InitializeWizard();  
// 页面变量  
// 定义 label
var           
forePortLB: TNewStaticText;
backPortLB: TNewStaticText; 
ipAddressLB: TNewStaticText;
begin
myPage := CreateCustomPage(wpWelcome, 'Init Data', 'SetUp Need Info'); 
// 前端 端口 label
forePortLB:=TNewStaticText.Create(myPage);
forePortLB.Left := ScaleX(5);
forePortLB.Top := ScaleY(5);
forePortLB.Width := ScaleX(100);
forePortLB.Height := ScaleY(50);
forePortLB.Caption := 'Foreground Port:';
forePortLB.Parent := myPage.Surface; 
// 前端 端口 input      
forePortEdit:=TEdit.Create(myPage);
forePortEdit.Text := '8081';
forePortEdit.Left := ScaleX(120);
forePortEdit.Top := ScaleY(5);   
forePortEdit.Width := ScaleX(200);
forePortEdit.Parent:=myPage.Surface;   
// 后端 端口 label
backPortLB:=TNewStaticText.Create(myPage);
backPortLB.Left := ScaleX(5);
backPortLB.Top := ScaleY(30);
backPortLB.Width := ScaleX(100);
backPortLB.Height := ScaleY(50);
backPortLB.Caption := 'Background Port:';
backPortLB.Parent := myPage.Surface;  
// 后端 端口 input   
backPortEdit:=TEdit.Create(myPage);  
backPortEdit.Text := '8082';
backPortEdit.Left := ScaleX(120);
backPortEdit.Top := ScaleY(30);   
backPortEdit.Width := ScaleX(200);
backPortEdit.Parent:=myPage.Surface;    
// Address label
ipAddressLB:=TNewStaticText.Create(myPage);
ipAddressLB.Left := ScaleX(5);
ipAddressLB.Top := ScaleY(55);
ipAddressLB.Width := ScaleX(100);
ipAddressLB.Height := ScaleY(50);
ipAddressLB.Caption := 'Host Address:';
ipAddressLB.Parent := myPage.Surface;   
// address 端口 input  
ipAddressEdit:=TEdit.Create(myPage); 
ipAddressEdit.Text := 'localhost';
ipAddressEdit.Left := ScaleX(120);
ipAddressEdit.Top := ScaleY(55);   
ipAddressEdit.Width := ScaleX(200);
ipAddressEdit.Parent:=myPage.Surface; 
end;

//function NextButtonClick(CurPageID: Integer): Boolean;
//begin      
//  Result := True;
//  if wpSelectDir = CurPageID then
//  begin
//    backPort := backPortEdit.Text;
//    forePort := forePortEdit.Text;
//    ipAddress := ipAddressEdit.Text;
//end
//end;
function replaceFileText(filePath:String;searchText:String;replaceText:String):Boolean;
var
    fileName,tempStr:String;
    svArray: TArrayOfString;
    nLines,i:Integer;
begin
    fileName := ExpandConstant(filePath); 
    //MsgBox(fileName, mbInformation, MB_OK);
    LoadStringsFromFile(fileName, svArray);
    nLines := GetArrayLength(svArray);
    for i := 0 to nLines - 1 do
    begin
      tempStr := svArray[i];
      //MsgBox(tempStr, mbInformation, MB_OK);
      if (Pos(searchText, tempStr) > 0 ) then
      begin
        StringChangeEx(tempStr, searchText, replaceText, True);
        svArray[i]:=tempStr;
        //MsgBox('after replace', mbInformation, MB_OK);
        //MsgBox(tempStr, mbInformation, MB_OK);
      end
    end;   
    SaveStringsToFile(fileName, svArray, false);
    Result:=True;
end;
procedure CurStepChanged(CurStep: TSetupStep);
var
    ipAndPort:String;
begin
    if CurStep=ssinstall then
      backPort := backPortEdit.Text;
      forePort := forePortEdit.Text;
      ipAddress := ipAddressEdit.Text;
    if CurStep=ssPostinstall then
    begin
      ipAndPort:= ipAddress + ':' + forePort;
      replaceFileText('{app}\web\index.bundle.js','%address%',ipAndPort); 
      replaceFileText('{app}\app\application.properties','%backPort%',backPort);  
      replaceFileText('{app}\nginx-1.13.5\conf\nginx.conf','%forePort%',forePort);
      replaceFileText('{app}\nginx-1.13.5\conf\nginx.conf','%backPort%',backPort);
    end;
    if CurStep=ssDone then
    begin
        //MsgBox('安装完成', mbInformation, MB_OK);
    end
end;  
[Icons]
Name: "{autoprograms}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"
Name: "{autodesktop}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; Tasks: desktopicon

[Run]
Filename: "{app}\{#MyAppExeName}"; Description: "{cm:LaunchProgram,{#StringChange(MyAppName, '&', '&&')}}"; Flags: nowait postinstall skipifsilent

